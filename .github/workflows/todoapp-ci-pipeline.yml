name: Continuous Integration
on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Builds container
      run: | 
        docker build --target production --tag todo-prod-image:latest .
        docker save todo-prod-image:latest > /tmp/todo-prod-image.tar
    - name: Temporarily Upload Docker Image
      uses: actions/upload-artifact@v2
      with:
        name: docker-artifact
        path: /tmp/todo-prod-image.tar
  unit-and-integration-test:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: build
    steps: 
    - uses: actions/checkout@v2
    - name: Builds container
      run: docker build --target test --tag todo-test-image .
    - name: Runs test
      run: docker run todo-test-image
  e2e-test:
    environment: e2e-test
    name: End-to-end Tests
    runs-on: ubuntu-latest
    needs: unit-and-integration-test
    steps: 
    - uses: actions/checkout@v2
    - name: Builds container
      run: docker build --target e2e_test --tag todo-e2e-test-image .
    - name: Runs test
      env:
        TRELLO_BOARD_ID: ${{ secrets.TRELLO_BOARD_ID }}
        TRELLO_KEY: ${{ secrets.TRELLO_KEY }}
        TRELLO_TOKEN: ${{ secrets.TRELLO_TOKEN }}
      run: |
        docker run \
          -e TRELLO_BOARD_ID=$TRELLO_BOARD_ID \
          -e TRELLO_KEY=$TRELLO_KEY           \
          -e TRELLO_TOKEN=$TRELLO_TOKEN       \
          todo-e2e-test-image
  docker-deploy:
    name: Deploy to DockerHub
    environment: docker-deploy
    runs-on: ubuntu-latest
    needs: e2e-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Retrieve Docker Image
        uses: actions/download-artifact@v2
        with:
          name: docker-artifact
          path: /tmp
      - name: Load Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
        run: |
          docker load --input /tmp/todo-prod-image.tar
          docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
          docker image tag todo-prod-image:latest $DOCKER_REPOSITORY:latest
          docker image push $DOCKER_REPOSITORY:latest
      - name: Delete Artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: docker-artifact